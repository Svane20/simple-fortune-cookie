name: Deploy
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  deploy-dev:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up kubectl
        uses: azure/k8s-set-context@v1
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBECONFIG_DEV }}
      - name: Set Kube config data
        run: echo "${{ secrets.KUBECONFIG_DEV }}" | base64 -d > kubeconfig
      - name: Deploy frontend, backend, and Redis
        run: |
          kubectl --kubeconfig kubeconfig apply -f kubernetes/backend-config.yaml
          kubectl --kubeconfig kubeconfig apply -f kubernetes/backend-deployment.yaml
          kubectl --kubeconfig kubeconfig apply -f kubernetes/frontend-config.yaml
          kubectl --kubeconfig kubeconfig apply -f kubernetes/frontend-deployment.yaml
          kubectl --kubeconfig kubeconfig apply -f kubernetes/redis-deployment.yaml
      - name: Wait for deployment
        run: kubectl --kubeconfig kubeconfig rollout status deployment
      - name: Run Functional tests
        run: chmod +x ci/functional-tests-dev.sh && ci/functional-tests-dev.sh
  deploy-prod:
    runs-on: ubuntu-latest
    needs: [ deploy-dev ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up kubectl
        uses: azure/k8s-set-context@v1
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBECONFIG }}
      - name: Set Kube config data
        run: echo "${{ secrets.KUBECONFIG }}" | base64 -d > kubeconfig
      - name: Deploy frontend, backend and Redis
        run: kubectl --kubeconfig kubeconfig apply -f kubernetes/
      - name: Wait for deployment
        run: kubectl --kubeconfig kubeconfig rollout status deployment