name: Go Build and Test

on:
  push:
  pull_request:

jobs:
  build_and_test_frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'
      - name: Install frontend dependencies
        run: go mod tidy
        working-directory: ./frontend
      - name: Run tests
        run: go test -v ./...
        working-directory: ./frontend
      - name: Build frontend
        run: go build -o frontend_binary
        working-directory: ./frontend
      - name: Upload frontend artifact
        uses: actions/upload-artifact@v3
        with:
          name: frontend-artifact
          path: ./frontend/frontend_binary

  build_frontend_docker_image:
    runs-on: ubuntu-latest
    needs: [ build_and_test_frontend ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Download frontend artifact
        uses: actions/download-artifact@v3
        with:
          name: frontend-artifact
          path: ./frontend
      - name: Login to GitHub Package Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      # Transform GitHub.actor to lowercase
      - name: Transform username to lowercase
        run: echo "OWNER_LOWER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
      - name: Build and push frontend Docker image
        run: |
          docker build -t ghcr.io/${{ env.OWNER_LOWER }}/simple-fortune-cookie-frontend:1.0-${{ github.sha }} \
                        -t ghcr.io/${{ env.OWNER_LOWER }}/simple-fortune-cookie-frontend:latest \
                        -f ./frontend/Dockerfile ./frontend
          docker push ghcr.io/${{ env.OWNER_LOWER }}/simple-fortune-cookie-frontend:1.0-${{ github.sha }}
          docker push ghcr.io/${{ env.OWNER_LOWER }}/simple-fortune-cookie-frontend:latest


  build_backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'
      - name: Install backend dependencies
        run: go mod tidy
        working-directory: ./backend
      - name: Build backend
        run: go build -o backend_binary
        working-directory: ./backend
      - name: Upload backend artifact
        uses: actions/upload-artifact@v3
        with:
          name: backend-artifact
          path: ./backend/backend.exe
